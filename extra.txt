//GET NAMES AND SORT THEM BY TYPES; run this for new pokemon
function fetchPokemon() {

  let pokemonByType = {}
  let fetchCount = 0
  //https://pokeapi.co/api/v2/type/: array[0-17] are the types; photo in images folder
  for (let id = 1; id <= 18; id++) {
    let url = `https://pokeapi.co/api/v2/type/${id}`;
    fetch(url)
      .then(response => response.json())
      .then(data => {
        //we fetch each type's url id, each url id contains type name and all the pokemon in that type.
        //type/id produces data. data.name shows type. data.pokemon show all pokemon
        // console.log(data.pokemon[1])
        let typeArray = []
        for (let i = 0; i < data.pokemon.length; i++) {
          // typeArray.push(data.pokemon[i].pokemon.name)
          typeArray.push(data.pokemon[i].pokemon.name)

        }//ends for loop

        //by each url id, i log an array of all pokemon in that url id/type.
        //So this inner loop makes one array, but the outer for loop repeats the process fot each url, so when we log it, we will see each array from each url (stored in typeArray).
        // Then we store all of these arrays in one object

        pokemonByType[id] = typeArray;
        fetchCount++;

        for (i = 1; i <= 18; i++) {
          if (fetchCount === 18) {
            console.log(pokemonByType[i].join(','))
            //logs all names by type
          }
        }
      })//ends .thendata
  }//ends id for loop
}//ends fetchPokemon fn

// fetchPokemon();


extra button for dl test
.then(canvas => {
      // dlCard is originally hidden. In a brief moment when user clicks button, it will show, then be hidden again at end of process, so the card that is downloaded is full sized
      dlCard.style.display = 'none';
      // move dlCard to body again and its hidden and delete the offscreen tempContainer
      document.body.appendChild(dlCard);
      // Remove the temporary container from the DOM
      document.body.removeChild(tempContainer);

      // Convert the canvas to a data URL
      const imageDataURL = canvas.toDataURL('image/png');

      // Create a temporary link element
      const downloadLink = document.createElement('a');

      // Set the href attribute to the data URL
      downloadLink.href = imageDataURL;

      // Set the download attribute with the desired filename
      downloadLink.download = 'Poke_Your_Type_card.png';

      // making new button for dl
      let dlBtn = document.createElement('button');
      dlBtn.textContent = 'H E L L O';
      downloadLink.appendChild(dlBtn);

      // Append the link to the document
      document.body.appendChild(downloadLink);


      //TO OPEN IN NEW TAB
        // Open the data URL in a new tab after a brief delay
      const newTab = window.open();
      
      let finalCard = document.createElement('img');
      finalCard.src = imageDataURL;
      finalCard.style = "width: 100%; height: 100vh; object-fit: contain;";
      newTab.document.body.appendChild(finalCard);

      filesaver
       canvas.toBlob(function (blob) {
        // Save the Blob using FileSaver.js
        saveAs(blob, 'Poke_Your_Type_card.png');
       })